generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  name      String
  email     String    @unique
  password  String
  role      UserRole  @default(USER)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Cliente {
  id          Int       @id @default(autoincrement())
  nomeCompleto String
  cpf         String    @unique
  email       String    @unique
  telefone    String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  comandas    Comanda[]
  reservas    Reserva[]
}

model Quadra {
  id          Int       @id @default(autoincrement())
  nome        String    @unique
  ativa       Boolean   @default(true)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  reservas    Reserva[]
}

model Produto {
  id           Int             @id @default(autoincrement())
  name         String
  description  String?
  category     ProductCategory
  priceCents   Int
  active       Boolean         @default(true)
  createdAt    DateTime        @default(now())
  updatedAt    DateTime        @updatedAt
  comandaItems ComandaItem[]
  estoque      Estoque?
}

model Estoque {
  id            Int      @id @default(autoincrement())
  produtoId     Int      @unique
  quantidade    Int      @default(0)
  minQuantidade Int      @default(0)
  updatedAt     DateTime @updatedAt
  produto       Produto  @relation(fields: [produtoId], references: [id])
}

model Reserva {
  id          Int       @id @default(autoincrement())
  clienteId   Int
  quadraId    Int
  data        DateTime
  hora        Int
  precoCents  Int
  status      ReservaStatus @default(ATIVA)
  observacoes String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  cliente     Cliente   @relation(fields: [clienteId], references: [id])
  quadra      Quadra    @relation(fields: [quadraId], references: [id])

  @@unique([data, hora, quadraId])
}


model Comanda {
  id           Int            @id @default(autoincrement())
  clienteId    Int?
  openedAt     DateTime       @default(now())
  closedAt     DateTime?
  totalCents   Int            @default(0)
  payment      PaymentMethod?
  notes        String?
  cliente      Cliente?       @relation(fields: [clienteId], references: [id])
  items        ComandaItem[]
}

model ComandaItem {
  id          Int      @id @default(autoincrement())
  comandaId   Int
  description String
  quantity    Int      @default(1)
  unitCents   Int
  createdAt   DateTime @default(now())
  produtoId   Int?
  comanda     Comanda  @relation(fields: [comandaId], references: [id])
  produto     Produto? @relation(fields: [produtoId], references: [id])
}

enum UserRole {
  ADMIN
  USER
}

enum PaymentMethod {
  CASH
  PIX
  CARD
}

enum ProductCategory {
  BEBIDA
  COMIDA
  SNACK
  OUTROS
}

enum ReservaStatus {
  ATIVA
  CANCELADA
  CONCLUIDA
}
